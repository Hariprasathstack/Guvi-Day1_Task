Blog - Difference between HTTP/1.1 vs HTTP/2

HTTP
HTTP stands for hypertext transfer protocol, and it is the basis for almost all web applications. 
More specifically, HTTP is the method computers and servers use to request and send information. 
For instance, when someone navigates to guvi.in on their laptop, their web browser sends an HTTP 
request to the guvi servers for the content that appears on the page. Then, guvi servers send HTTP
 responses with the text, images, and formatting that the browser displays to the user.

HTTP/1.1
Developed by Timothy Berners-Lee in 1989 as a communication standard for the World Wide Web, 
HTTP is a top-level application protocol that exchanges information between a client computer 
and a local or remote web server. In this process, a client sends a text-based request to a 
server by calling a method like GET or POST. In response, the server sends a resource like an 
HTML page back to the client.

HTTP/2: 
HTTP/2 was developed over the SPDY protocol. HTTP/2 works on the binary framing layer instead 
of textual that converts all the messages in binary format. it works on fully multiplexed that 
is one TCP connection is used for multiple requests. HTTP/2 uses HPACK which is used to split 
data from header. it compresses the header. The server sends all the other files like CSS & JS 
without the request of the client using the PUSH frame.

Difference between HTTP/1.1 and HTTP/2 are

HTTP/1.1, which keeps all requests and responses in plain text format, 
HTTP/2 uses the binary framing layer to encapsulate all messages in binary format.

Multiplexing: 
HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks 
all the other resources behind it. In contrast, HTTP/2 is able to use a single TCP connection 
to send multiple streams of data at once so that no one resource blocks any other resource. 
HTTP/2 does this by splitting data into binary-code messages and numbering these messages 
so that the client knows which stream each binary message belongs to.

Server push: 
Typically, a server only serves content to a client device if the client asks for it. 
However, this approach is not always practical for modern webpages, which often involve several dozen 
separate resources that the client must request. HTTP/2 solves this problem by allowing a server to 
"push" content to a client before the client asks for it. The server also sends a message letting 
the client know what pushed content to expect â€“ like if Bob had sent Alice a Table of Contents of 
his novel before sending the whole thing.

Header compression: 
Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 
compress HTTP messages to make them smaller. However, HTTP/2 uses a more advanced compression method 
called HPACK that eliminates redundant information in HTTP header packets. This eliminates a few bytes
from every HTTP packet. Given the volume of HTTP packets involved in loading even a single webpage, 
those bytes add up quickly, resulting in faster loading.